# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018-2022, The AppImage project
# This file is distributed under the same license as the AppImage package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: AppImage master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-04 12:11+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_TW\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../source/introduction/software-overview.rst:4
msgid "Software Overview"
msgstr ""

#: ../../../source/introduction/software-overview.rst:6
#: ../../../source/introduction/software-overview.rst:188
msgid "Todo"
msgstr ""

#: ../../../source/introduction/software-overview.rst:7
msgid "list deprecated components"
msgstr ""

#: ../../../source/introduction/software-overview.rst:13
msgid "Contents"
msgstr ""

#: ../../../source/introduction/software-overview.rst:16
msgid "AppImage project"
msgstr ""

#: ../../../source/introduction/software-overview.rst:21
msgid "AppImageKit"
msgstr ""

#: ../../../source/introduction/software-overview.rst:23
msgid ""
"`AppImageKit <https://github.com/AppImage/AppImageKit>`__ is the reference "
"implementation of the :ref:`AppImage specification <appimage-"
"specification>`. It is split up into several components, which are described "
"in this subsection."
msgstr ""

#: ../../../source/introduction/software-overview.rst:29
msgid "runtime"
msgstr ""

#: ../../../source/introduction/software-overview.rst:31
msgid ""
"The runtime provides the \"executable header\" of every AppImage. When "
"executing an AppImage, the runtime within the AppImage is run, which mounts "
"the embedded file system image read-only in a temporary location, and "
"launches the payload application within there. After the payload application "
"exited, the runtime unmounts the squashfs image and cleans up the temporary "
"resources (such as, the temporary mountpoint directory)."
msgstr ""

#: ../../../source/introduction/software-overview.rst:33
msgid ""
"**Download:** There is usually no reason to download this manually, but if "
"you still want to, you can get it from https://github.com/AppImage/type2-"
"runtime/releases/continuous. Keep in mind that on its own it does nothing, "
"it needs to be combined with a filesystem image to form a valid AppImage, "
"usually by using appimagetool which comes with its own copy of the runtime."
msgstr ""

#: ../../../source/introduction/software-overview.rst:39
msgid "appimagetool"
msgstr ""

#: ../../../source/introduction/software-overview.rst:41
msgid ""
"appimagetool is the easiest way to create AppImages from existing "
"directories on the system, the so-called :ref:`AppDirs <ref-appdir>`. It "
"creates the AppImage by embedding the :ref:`runtime <ref-runtime>`, and "
"creating and appending the filesystem image."
msgstr ""

#: ../../../source/introduction/software-overview.rst:43
msgid ""
"appimagetool implements all optional features, like for instance `update "
"information <https://github.com/AppImage/AppImageSpec/blob/master/draft."
"md#update-information>`__, :ref:`signing <ref-signing>`, and some linting "
"options to make sure the information in the AppImage is valid (for instance, "
"it can validate :ref:`AppStream files <appstream-support>`)."
msgstr ""

#: ../../../source/introduction/software-overview.rst:45
msgid ""
"**Download:** You can get it as an AppImage from https://github.com/AppImage/"
"appimagetool/releases/continuous."
msgstr ""

#: ../../../source/introduction/software-overview.rst:49
msgid "AppRun"
msgstr ""

#: ../../../source/introduction/software-overview.rst:51
msgid ""
"Every AppImage's AppDir must contain a file called :code:`AppRun`, providing "
"the \"entry point\". When running the AppImage, the :ref:`runtime <ref-"
"runtime>` executes the :code:`AppRun` file within the :ref:`AppDir <ref-"
"appdir>`."
msgstr ""

#: ../../../source/introduction/software-overview.rst:53
msgid ""
":code:`AppRun` doesn't necessarily have to be a regular file. If the "
"application is :ref:`relocatable <relocatable-apps>`, it can just be a "
"symlink to the main binary. Tools like :ref:`ref-linuxdeploy` can turn "
"applications into relocatable applications, and therefore create such a "
"symlink."
msgstr ""

#: ../../../source/introduction/software-overview.rst:55
msgid ""
"In some cases, though, when an existing application must not be altered (e."
"g., when the license prohibits any modifications) or tools like linuxdeploy "
"cannot be used, AppImageKit's :code:`AppRun.c` can be used. :code:`AppRun.c` "
"attempts to make programs load bundled shared libraries instead of system "
"ones by manipulating environment variable. Furthermore, it attempts to "
"prevent warnings users might encounter that are coming from the fact the :"
"ref:`AppDir <ref-appdir>` is mounted read-only."
msgstr ""

#: ../../../source/introduction/software-overview.rst:57
msgid ""
"Using :code:`AppRun.c` is not a guarantee that an application will run, and "
"the packager must provide all the resources an application could need "
"manually (or by using external tools) before creating the AppImage with :ref:"
"`appimagetool <ref-appimagetool>`. :code:`AppRun` force-changes the current "
"working directory, and therefore applications can not detect where the "
"AppImage was called originally. This may be especially annoying for CLI "
"tools, but can also be a problem for GUI applications expecting paths via "
"parameters."
msgstr ""

#: ../../../source/introduction/software-overview.rst:60
msgid ""
":code:`AppRun.c`, the binary from AppImageKit, is legacy technology and "
"should be avoided if possible. Tools like :ref:`linuxdeploy <ref-"
"linuxdeploy>` deploy applications in a different way (they are smart enough "
"so that a simple symlink called :code:`AppRun` to the main binary works just "
"fine), and made using :code:`AppRun.c` obsolete in most cases."
msgstr ""

#: ../../../source/introduction/software-overview.rst:62
msgid ""
"There are some edge cases where :code:`AppRun.c` is still in use, and there "
"it might be useful. However, it suffers from many limitations and requires "
"some workarounds (which require troublesome mechanisms, such as e.g., force-"
"changing current working directory, as described in this section), which can "
"cause a lot of trouble while trying to debug an AppImage. Please beware of "
"these before thinking about using :code:`AppRun.c` in your AppImage."
msgstr ""

#: ../../../source/introduction/software-overview.rst:64
msgid ""
"**Download:** There is usually no reason to download this manually, but if "
"you still want to, you can get it from https://github.com/AppImage/"
"AppImageKit/releases/continuous."
msgstr ""

#: ../../../source/introduction/software-overview.rst:68
msgid "Helpers"
msgstr ""

#: ../../../source/introduction/software-overview.rst:70
msgid ""
"AppImageKit ships with a few helpers that can be used to verify and validate "
"some AppImage features."
msgstr ""

#: ../../../source/introduction/software-overview.rst:74
msgid "validate"
msgstr ""

#: ../../../source/introduction/software-overview.rst:76
msgid ":code:`validate` can validate the PGP signatures inside AppImages."
msgstr ""

#: ../../../source/introduction/software-overview.rst:78
#: ../../../source/introduction/software-overview.rst:88
msgid ""
"Normally there is no need to use this directly, this is mainly for debugging "
"for AppImage developers."
msgstr ""

#: ../../../source/introduction/software-overview.rst:80
#: ../../../source/introduction/software-overview.rst:90
msgid ""
"**Download:** Currently this needs to be build from source. The source is in "
"https://github.com/AppImage/AppImageKit/. In the future it may become "
"bundled with or its functionality may become integrated into appimagetool."
msgstr ""

#: ../../../source/introduction/software-overview.rst:84
msgid "digest-md5"
msgstr ""

#: ../../../source/introduction/software-overview.rst:86
msgid ""
"Calculates the MD5 digest used for desktop integration purposes for a given "
"AppImage. This digest depends on the path, not on the contents."
msgstr ""

#: ../../../source/introduction/software-overview.rst:95
msgid "AppImageUpdate"
msgstr ""

#: ../../../source/introduction/software-overview.rst:97
msgid ""
"AppImageUpdate_ lets you update AppImages in a decentralized way using "
"information embedded in the AppImage itself."
msgstr ""

#: ../../../source/introduction/software-overview.rst:99
msgid ""
"The project consists of two tools: :code:`appimageupdatetool`, a full-"
"featured CLI tool for updating AppImages and dealing with `update "
"information`_, and :code:`AppImageUpdate`, a user interface for updating "
"AppImages written in Qt."
msgstr ""

#: ../../../source/introduction/software-overview.rst:104
msgid ""
"**Download:** You can get it as an AppImage from https://github.com/AppImage/"
"AppImageUpdate/releases/continuous."
msgstr ""

#: ../../../source/introduction/software-overview.rst:109
msgid "appimaged"
msgstr ""

#: ../../../source/introduction/software-overview.rst:111
msgid ""
"`appimaged <https://github.com/probonopd/go-appimage/releases>`__ is a "
"daemon that monitors a predefined set of directories on the system, looking "
"for AppImages. It automatically integrates all AppImages it can find during "
"an initial search, and then live watches for new AppImage (or AppImages that "
"were removed) and (de)integrates these immediately."
msgstr ""

#: ../../../source/introduction/software-overview.rst:113
msgid "It is shipped as an AppImage."
msgstr ""

#: ../../../source/introduction/software-overview.rst:117
msgid ""
"One of the monitored directories is ``~/Downloads``. If the directory is "
"very large, appimaged usually needs quite long to visit all files. It is "
"likely to slow down the system (specifically, the filesystem)."
msgstr ""

#: ../../../source/introduction/software-overview.rst:119
msgid ""
"**Download:** You can get it as an AppImage from https://github.com/"
"probonopd/go-appimage/releases."
msgstr ""

#: ../../../source/introduction/software-overview.rst:122
msgid "Third-party tools"
msgstr ""

#: ../../../source/introduction/software-overview.rst:124
msgid ""
"This section showcases a couple of third-party tools that can be used to "
"create and handle AppImage files."
msgstr ""

#: ../../../source/introduction/software-overview.rst:130
msgid "linuxdeployqt"
msgstr ""

#: ../../../source/introduction/software-overview.rst:132
msgid ""
"`linuxdeployqt <https://github.com/probonopd/linuxdeployqt>`__ is a simple "
"Qt-based command line tool that can be used to create AppDirs and AppImages. "
"It is based on the similar macdeployqt tool that comes with Qt. It can be "
"used to produce AppDirs and AppImages for C, C++, and Qt/QML applications, "
"as well as applications written in other compiled languages."
msgstr ""

#: ../../../source/introduction/software-overview.rst:136
msgid ""
"There is a copy-and-paste example for how to use it on Travis CI at https://"
"github.com/probonopd/linuxdeployqt#using-linuxdeployqt-with-travis-ci."
msgstr ""

#: ../../../source/introduction/software-overview.rst:138
msgid ""
"**Download:** You can get it as an AppImage from https://github.com/"
"probonopd/linuxdeployqt/releases/tag/continuous."
msgstr ""

#: ../../../source/introduction/software-overview.rst:142
msgid "linuxdeploy"
msgstr ""

#: ../../../source/introduction/software-overview.rst:144
msgid ""
"linuxdeploy_ is a simple yet flexible, plugins-based to use tool that can be "
"used to create AppDirs and AppImages. It has been developed in 2018, and "
"describes itself as an \"AppDir creation and maintenance tool\"."
msgstr ""

#: ../../../source/introduction/software-overview.rst:146
msgid ""
"linuxdeploy is planned to succeed of :ref:`linuxdeployqt <ref-"
"linuxdeployqt>`, and can be used in all projects that use :ref:"
"`linuxdeployqt <ref-linuxdeployqt>`. The list of plugins is continually "
"growing, providing solutions for bundling frameworks such as `Qt <https://"
"github.com/linuxdeploy/linuxdeploy-plugin-qt>`__ as well as complete "
"environments for non-native programming languages such as `Python <https://"
"github.com/linuxdeploy/linuxdeploy-plugin-conda>`__."
msgstr ""

#: ../../../source/introduction/software-overview.rst:152
msgid ""
"There's a guide on :ref:`native binary packaging <ref-packaging-native-"
"binaries>` and a general :ref:`linuxdeploy user guide <ref-linuxdeploy>` in "
"the :ref:`ref-packaging-guide`."
msgstr ""

#: ../../../source/introduction/software-overview.rst:154
msgid ""
"**Download:** You can get it as an AppImage from https://github.com/"
"linuxdeploy/linuxdeploy/releases/continuous."
msgstr ""

#: ../../../source/introduction/software-overview.rst:159
msgid "AppImageLauncher"
msgstr ""

#: ../../../source/introduction/software-overview.rst:161
msgid ""
"AppImageLauncher_ is a helper application for Linux distributions serving as "
"a kind of \"entry point\" for running and integrating AppImages."
msgstr ""

#: ../../../source/introduction/software-overview.rst:163
msgid "Quoting the README:"
msgstr ""

#: ../../../source/introduction/software-overview.rst:165
msgid ""
"AppImageLauncher makes your Linux desktop AppImage ready™. By installing it, "
"you won't ever have to worry about AppImages again. You can always double "
"click them without making them executable first, just like you should be "
"able to do nowadays. You can integrate AppImages with a single mouse click, "
"and manage them from your application launcher. Updating and removing "
"AppImages becomes as easy as never before."
msgstr ""

#: ../../../source/introduction/software-overview.rst:167
msgid ""
"Due to its simple but efficient way to integrate into your system, it plays "
"well with other applications that can be used to manage AppImages, for "
"example app stores. However, it doesn't depend on any of those, and can run "
"completely standalone."
msgstr ""

#: ../../../source/introduction/software-overview.rst:169
msgid ""
"Install AppImageLauncher today for your distribution and enjoy using "
"AppImages as easy as never before!"
msgstr ""

#: ../../../source/introduction/software-overview.rst:171
msgid "https://github.com/TheAssassin/AppImageLauncher/blob/master/README.md"
msgstr ""

#: ../../../source/introduction/software-overview.rst:173
msgid ""
"AppImageLauncher doesn't provide any kind of \"app store\" software, but "
"integrates into system-provided launchers' context menus. It provides tools "
"for updating (based on :ref:`AppImageUpdate <ref-appimageupdate>`) and "
"removing AppImages."
msgstr ""

#: ../../../source/introduction/software-overview.rst:177
msgid ""
"**Download:** You can get AppImageLauncher-Lite as an AppImage and the full "
"version as a deb from https://github.com/TheAssassin/AppImageLauncher/"
"releases/continuous."
msgstr ""

#: ../../../source/introduction/software-overview.rst:181
msgid "NX Software Center"
msgstr ""

#: ../../../source/introduction/software-overview.rst:183
msgid ""
"A portable Software Center for portable applications thanks to AppImage."
msgstr ""

#: ../../../source/introduction/software-overview.rst:186
msgid ""
"**Download:** You can get NX Software Center as part of Nitrux OS from "
"https://nxos.org/. There are currently no recent continuous standalone "
"AppImage builds available."
msgstr ""

#: ../../../source/introduction/software-overview.rst:189
msgid "Describe the rest of the third-party tools"
msgstr ""
