# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018-2022, The AppImage project
# This file is distributed under the same license as the AppImage package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: AppImage master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-10-04 12:11+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../source/reference/architecture.rst:4
msgid "Architecture"
msgstr ""

#: ../../../source/reference/architecture.rst:6
msgid ""
"AppImage follows a very simple architecture, which is explained in this "
"section."
msgstr ""

#: ../../../source/reference/architecture.rst:12
msgid "Contents"
msgstr ""

#: ../../../source/reference/architecture.rst:15
msgid "Overview"
msgstr ""

#: ../../../source/reference/architecture.rst:17
msgid ""
"An AppImage consists of two parts: a *runtime* and a *file system image*. "
"For the current type 2, the file system in use is SquashFS."
msgstr ""

#: ../../../source/reference/architecture.rst:22
msgid ""
"AppImage file structure. Copyright Â© `@TheAssassin <https://github.com/"
"TheAssassin>`__ 2019. Licensed under CC-By-SA Intl 4.0."
msgstr ""

#: ../../../source/reference/architecture.rst:24
msgid ""
"What happens when an AppImage is run is that the operating system runs the "
"AppImage as an executable. The runtime, the executable part, tries to mount "
"the file system image using :ref:`FUSE <ref-fuse>`. If that succeeds, the :"
"ref:`AppDir <ref-appdir>` is available in a :ref:`temporary mountpoint <ref-"
"temporary-mountpoint>`, and can be used like a read-only directory."
msgstr ""

#: ../../../source/reference/architecture.rst:26
msgid ""
"The runtime continues by calling the AppDir's \"entrypoint\" :ref:`AppRun "
"<ref-apprun>` using the operating system facilities. There are no checks "
"performed by the runtime, the operating system is simply tasked with the "
"execution of ``<AppDir mountpoint>/AppRun``. This provides a lot of "
"flexibility, as AppRun can be an arbitrary executable, a script with a "
"shebang_, or even a simple symlink to another executable within the AppDir. "
"The file must be executable."
msgstr ""

#: ../../../source/reference/architecture.rst:30
msgid ""
"The contents of an AppDir are completely user-specified, although there are "
"tools that help with packaging. For more information, see the :ref:"
"`packaging guide <ref-packaging-guide>`."
msgstr ""
